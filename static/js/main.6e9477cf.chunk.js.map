{"version":3,"sources":["redux/reducers/index.js","redux/reducers/graphReducer.js","mockApi.js","sagas/index.js","redux/store.js","components/Graph.js","selectors/graphSelector.js","containers/Main.js","actions/index.js","App.js","serviceWorker.js","index.js","media/loading.svg"],"names":["reducers","graphReducer","state","arguments","length","undefined","data","male","female","loading","action","type","Object","objectSpread","json","fetchGraphData","Promise","resolve","reject","setTimeout","average","actionWatcher","rootSaga","regenerator_default","a","wrap","_context","prev","next","fetchData","sent","put","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","saga","createSaga","middlewareEnhancer","createLogger","diff","applyMiddleware","createStore","combineReducers","run","prepareOptions","_ref","maxY","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","datasetStroke","datasetStrokeWidth","datasetFill","legend","display","scales","yAxes","ticks","min","max","stepSize","suggestedMin","suggestedMax","fontSize","callback","label","index","labels","xAxes","id","gridLines","color","elements","point","radius","tooltips","mode","intersect","yAlign","hover","chartArea","backgroundColor","layout","padding","left","right","top","bottom","annotation","events","annotations","drawTime","scaleID","value","borderColor","borderWidth","position","content","enabled","onMouseenter","e","console","log","this","options","chartInstance","update","onMouseleave","LineChartExample","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Chart","pluginService","register","beforeDraw","chart","easing","config","ctx","save","fillStyle","fillRect","restore","plugins","x_axis","topY","bottomY","forEach","x","getPixelForTick","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","y_axis","leftX","RightX","y","document","getElementsByClassName","i","style","nextProps","setState","datasets","concat","toConsumableArray","react_default","createElement","react_chartjs_2_es","maxValue","width","height","redraw","transform","fontFamily","React","Component","maxValueSelector","createSelector","Math","apply","connect","getGraphData","useEffect","zIndex","flexDirection","alignItems","src","marginRight","Graph","JSON","stringify","App","maxWidth","containers_Main","Boolean","window","location","hostname","match","render","es","store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6e9477cf.chunk.js","sourcesContent":["import graphReducer from \"./graphReducer\";\r\n\r\nexport default {\r\n  graphReducer\r\n};\r\n","const reducer = (\r\n  state = { data: { male: [], female: [] }, loading: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"REQUEST_GET_GRAPH_DATA\":\r\n      return { ...state, loading: true };\r\n    case \"GET_GRAPH_DATA_SUCCESS\":\r\n      return { ...state, loading: false, data: action.json };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const fetchGraphData = () => {\r\n  return new Promise((resolve, reject) => {\r\n    // fake latency for real server experience\r\n    setTimeout(() => {\r\n      resolve({\r\n        male: [5, 10, 30, 36, 30, 20, 10, 5, 4, 3],\r\n        female: [3, 5, 10, 15, 25, 30, 25, 20, 10, 5],\r\n        average: 41\r\n      });\r\n    }, 2000);\r\n  });\r\n};\r\n","import { put, takeLatest, all } from \"redux-saga/effects\";\r\nimport { fetchGraphData as fetchData } from \"../mockApi\";\r\n\r\nfunction* fetchGraphData() {\r\n  const json = yield fetchData();\r\n  yield put({ type: \"GET_GRAPH_DATA_SUCCESS\", json });\r\n}\r\nfunction* actionWatcher() {\r\n  yield takeLatest(\"REQUEST_GET_GRAPH_DATA\", fetchGraphData);\r\n}\r\nexport default function* rootSaga() {\r\n  yield all([actionWatcher()]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSaga from \"redux-saga\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport reducers from \"./reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst saga = createSaga();\r\nconst logger = createLogger({ diff: true });\r\n\r\nconst middlewareEnhancer = (() =>\r\n  process.env.NODE_ENV === \"development\"\r\n    ? composeWithDevTools(applyMiddleware(saga, logger))\r\n    : applyMiddleware(saga))();\r\n\r\nexport default createStore(\r\n  combineReducers(reducers),\r\n  undefined,\r\n  middlewareEnhancer\r\n);\r\n\r\nsaga.run(rootSaga);\r\n","import React from \"react\";\r\nimport { Line as LineChart } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js\";\r\nimport \"chartjs-plugin-annotation\";\r\n\r\nfunction prepareData(data) {\r\n  return {\r\n    labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    datasets: [\r\n      {\r\n        label: \"Female\",\r\n        backgroundColor: \"rgba(124,210,207,0.93)\",\r\n        borderColor: \"rgba(124,210,207,0.93)\",\r\n        data: [0, ...data.female]\r\n      },\r\n      {\r\n        label: \"Male\",\r\n        backgroundColor: \"rgba(120,164,227,0.93)\",\r\n        borderColor: \"rgba(120,164,227,0.93)\",\r\n        data: [0, ...data.male]\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nfunction prepareOptions({ maxY, average }) {\r\n  const stepSize = maxY / 4;\r\n\r\n  return {\r\n    scaleShowGridLines: true,\r\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\r\n    scaleGridLineWidth: 1,\r\n    scaleShowHorizontalLines: true,\r\n    scaleShowVerticalLines: true,\r\n    bezierCurve: true,\r\n    bezierCurveTension: 1,\r\n    pointDot: false,\r\n    datasetStroke: true,\r\n    datasetStrokeWidth: 2,\r\n    datasetFill: true,\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            min: 0,\r\n            max: maxY,\r\n            stepSize: stepSize,\r\n            suggestedMin: 0.5,\r\n            suggestedMax: 5.5,\r\n            fontSize: 10,\r\n            callback: function(label, index, labels) {\r\n              if (index === 4) {\r\n                return \"0\";\r\n              } else if (index === 0) {\r\n                return maxY + \"%\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          id: \"x-axis-0\"\r\n        },\r\n        {\r\n          id: \"x-axis-1\",\r\n          type: \"linear\",\r\n          ticks: {\r\n            min: 0,\r\n            max: 100,\r\n            stepSize: 1\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0)\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0\r\n      }\r\n    },\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      yAlign: \"bottom\"\r\n    },\r\n    hover: {\r\n      mode: \"nearest\",\r\n      intersect: true\r\n    },\r\n    chartArea: {\r\n      backgroundColor: \"rgba(233, 236, 241, 1)\"\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 10,\r\n        right: 15,\r\n        top: 10,\r\n        bottom: -45\r\n      }\r\n    },\r\n    annotation: {\r\n      events: [\"mouseenter\", \"mouseleave\"],\r\n      annotations: [\r\n        {\r\n          drawTime: \"afterDatasetsDraw\",\r\n          id: \"vertLine\",\r\n          type: \"line\",\r\n          mode: \"vertical\",\r\n          scaleID: \"x-axis-1\",\r\n          value: average,\r\n          borderColor: \"rgb(130,134,137)\",\r\n          borderWidth: 3,\r\n          label: {\r\n            position: \"top\",\r\n            content: \"Facebook Average | \" + average,\r\n            enabled: false\r\n          },\r\n          onMouseenter: function(e) {\r\n            console.log(\"enter Annotation\");\r\n            var element = this;\r\n            element.options.label.enabled = true;\r\n            element.chartInstance.update();\r\n          },\r\n          onMouseleave: function(e) {\r\n            console.log(\"leave Annotation\");\r\n            var element = this;\r\n            element.options.label.enabled = false;\r\n            element.chartInstance.update();\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n}\r\n\r\nclass LineChartExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: {} };\r\n  }\r\n  componentWillMount() {\r\n    // fill background of chart area\r\n    Chart.pluginService.register({\r\n      beforeDraw: function(chart, easing) {\r\n        if (\r\n          chart.config.options.chartArea &&\r\n          chart.config.options.chartArea.backgroundColor\r\n        ) {\r\n          var ctx = chart.chart.ctx;\r\n          var chartArea = chart.chartArea;\r\n\r\n          ctx.save();\r\n          ctx.fillStyle = chart.config.options.chartArea.backgroundColor;\r\n          ctx.fillRect(\r\n            chartArea.left,\r\n            chartArea.top,\r\n            chartArea.right - chartArea.left,\r\n            chartArea.bottom - chartArea.top\r\n          );\r\n          ctx.restore();\r\n        }\r\n      }\r\n    });\r\n\r\n    // draw x-gridlines in non-overflow manner\r\n    Chart.plugins.register({\r\n      beforeDraw: function(chart) {\r\n        var ctx = chart.chart.ctx,\r\n          x_axis = chart.scales[\"x-axis-0\"],\r\n          topY = chart.scales[\"y-axis-0\"].top,\r\n          bottomY = chart.scales[\"y-axis-0\"].bottom;\r\n        x_axis.options.gridLines.display = false;\r\n        x_axis.ticks.forEach(function(label, index) {\r\n          var x = x_axis.getPixelForTick(index);\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = x_axis.options.gridLines.color;\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        });\r\n      }\r\n    });\r\n\r\n    // draw y-gridlines in non-overflow manner\r\n    Chart.plugins.register({\r\n      beforeDraw: function(chart) {\r\n        var ctx = chart.chart.ctx,\r\n          y_axis = chart.scales[\"y-axis-0\"],\r\n          leftX = chart.scales[\"x-axis-0\"].left,\r\n          RightX = chart.scales[\"x-axis-0\"].right;\r\n        y_axis.options.gridLines.display = false;\r\n        y_axis.ticks.forEach(function(label, index) {\r\n          var y = y_axis.getPixelForTick(index);\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(leftX, y);\r\n          ctx.lineTo(RightX, y);\r\n          ctx.lineWidth = 1;\r\n          ctx.strokeStyle = y_axis.options.gridLines.color;\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    var ctx = document.getElementsByClassName(\"chartjs-render-monitor\");\r\n    // set all the background colors if page has more than one charts\r\n    for (let i = 0; i < ctx.length; i++) {\r\n      ctx[i].style.backgroundColor = \"rgba(245,246,250,255)\";\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.data) {\r\n      this.setState({\r\n        data: prepareData(nextProps.data)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"relative\" }}>\r\n        <LineChart\r\n          data={this.state.data || {}}\r\n          options={prepareOptions({\r\n            maxY: this.props.maxValue > 0 ? this.props.maxValue + 10 : 40,\r\n            average: this.props.data.average\r\n          })}\r\n          width={600}\r\n          height={180}\r\n          redraw={true}\r\n        />\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            transform: \"rotate(-90deg)\",\r\n            top: \"45%\",\r\n            left: \"5px\",\r\n            fontFamily: \"sans-serif\",\r\n            fontSize: \"0.6em\",\r\n            color: \"rgba(50,50,50,0.7)\"\r\n          }}\r\n        >\r\n          Viewership\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChartExample;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const dataSelector = state => state.data;\r\n\r\nexport const maxValueSelector = createSelector(\r\n  dataSelector,\r\n  data => Math.max(...data.female, ...data.male)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGraphData } from \"../actions\";\r\nimport Graph from \"../components/Graph\";\r\nimport { maxValueSelector } from \"../selectors/graphSelector\";\r\nimport loading from \"../media/loading.svg\";\r\n\r\nfunction Main(props) {\r\n  useEffect(() => {\r\n    props.getGraphData();\r\n  }, []);\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {props.graphReducer.loading && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"44%\",\r\n            top: \"38%\",\r\n            zIndex: \"100\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <img\r\n            src={loading}\r\n            style={{ marginRight: \"10px\", width: \"40px\", height: \"40px\" }}\r\n          />\r\n          Loading\r\n        </div>\r\n      )}\r\n      <Graph\r\n        data={props.graphReducer.data}\r\n        maxValue={maxValueSelector(props.graphReducer)}\r\n      />\r\n      <h2>Data</h2>\r\n      <code>{JSON.stringify(props.graphReducer.data)}</code>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  {\r\n    getGraphData\r\n  }\r\n)(Main);\r\n","export const getGraphData = () => ({\r\n  type: \"REQUEST_GET_GRAPH_DATA\"\r\n});\r\n","import React from \"react\";\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  return (\n    <div style={{ maxWidth: \"700px\" }}>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"regenerator-runtime/runtime\";\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loading.b4c7c196.svg\";"],"sourceRoot":""}